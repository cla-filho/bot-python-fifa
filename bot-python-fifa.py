# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z-CZADJfJvdbYoEVN4R6qyhayrVl2YCk
"""

import requests
from bs4 import BeautifulSoup

url = "https://platform.tonybet.com/api/event/list"
querystring = {"sportId_eq": "1059", "limit": "10", "competitor2Id_neq": "", "competitor1Id_neq": "",
                       "oddsExists_eq": "1", "main": "1", "status_in[]": ["2", "1"],
                       "relations[]": ["odds", "withMarketsCount", "league", "result", "competitors", "sportCategories",
                                       "broadcasts", "statistics", "additionalInfo", "tips"], "lang": "br"}

headers = {
            "authority": "platform.tonybet.com",
            "accept": "application/json",
            "accept-language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
            "client-timezone": "America/Sao_Paulo",
            "content-type": "application/json",
            "cookie": "_gid=GA1.2.1346806476.1676138114; _ga=GA1.1.1719171335.1676138114; cd_user_id=186419deee5157-0f5aaddfb032e6-26021051-e1000-186419deee6336; _ga_9C7P2964C3=GS1.1.1676138114.1.0.1676138114.0.0.0; LaVisitorId_dGdsYWIubGFkZXNrLmNvbS8=k798t3s4o6h1ypyuhx6bfuukdp07w; _hjSessionUser_2596327=eyJpZCI6IjE3NWE4OTAwLTcyYjEtNTlhMy04MGU3LTVkNTYxYTg5ZDg5NiIsImNyZWF0ZWQiOjE2NzYxMzgxMTYxNjUsImV4aXN0aW5nIjpmYWxzZX0=; _hjFirstSeen=1; _hjSession_2596327=eyJpZCI6ImIwMmI4NTkwLTk0ZTQtNDg4ZS05YjBkLWJmZjRjOGQ3OGM4ZCIsImNyZWF0ZWQiOjE2NzYxMzgxMTY0NjQsImluU2FtcGxlIjpmYWxzZX0=; sid=e704a79cc713777c373c69a4d33c53dc; _cioanonid=a10f3fd1-8309-8f02-1eaa-1bbafb18e40b",
            "dnt": "1",
            "origin": "https://tonybet.com",
            "referer": "https://tonybet.com/",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "same-site",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36",
            "x-requested-with": "XMLHttpRequest"
        }
response = requests.request("GET", url, headers=headers, params=querystring)
soup = BeautifulSoup(requests.get(url).content, 'html.parser')
dic_response = response.json()

for game in dic_response['data']['items']:
    date = game[str('time')]

    # team
    homeid = game[str('competitor1Id')]
    awayid = game[str('competitor2Id')]
    leagueid = game[str('leagueId')]
    idpartida = game[str('id')]

for liga in dic_response['data']['relations']['league']:
    league = liga[str('id')]
    if leagueid == league:
        leaguename = liga['name']

for competitors in dic_response['data']['relations']['competitors']:
    competitor = competitors[str('id')]
    if competitor == homeid:
        home = competitors['name']
    if competitor == awayid:
        away = competitors['name']

for stats in dic_response['data']['relations']['statistics']:
    if idpartida == stats:
        stats = idpartida

listac = []
for infocorners in dic_response['data']['relations']['statistics'][f'{stats}']['corners'].values():
    corners = infocorners
    listac.append(corners)

listay = []
for infoyellowcards in dic_response['data']['relations']['statistics'][f'{stats}']['yellowCards'].values():
    corners = infoyellowcards
    listay.append(corners)

listar = []
for inforedcards in dic_response['data']['relations']['statistics'][f'{stats}']['redCards'].values():
    corners = inforedcards
    listar.append(corners)


for score in dic_response['data']['relations']['result']:
    if idpartida == score:
        score = idpartida

listas = []
for teamscore in dic_response['data']['relations']['result'][f'{score}'].items():
    if teamscore[0] == 'team1Score' or teamscore[0] == 'team2Score':
        # print('achei', teamscore)


          print(f'{leaguename} | {home} v {away} | {date} |corners {listac}|yellowcards{listay}|redcards{listar}|{teamscore}')


# greenCards
# redCards
# yellowCards
# yellowRedCards